// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rolemessage.proto

#ifndef PROTOBUF_rolemessage_2eproto__INCLUDED
#define PROTOBUF_rolemessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_rolemessage_2eproto();
void protobuf_AssignDesc_rolemessage_2eproto();
void protobuf_ShutdownFile_rolemessage_2eproto();

class CMessageRoleLoginRequest;
class CMessageRoleLoginResponse;
class CMessageRoleCreateRequest;
class CMessageRoleCreateResponse;
class CMessageRolePropertyRequest;
class CMessageRolePropertyResponse;

enum RoleOpcode {
  ID_C2S_ROLE_LOGIN_REQUEST = 65536,
  ID_S2C_ROLE_LOGIN_RESPONSE = 65537,
  ID_C2S_ROLE_CREATE_REQUEST = 65538,
  ID_S2C_ROLE_CREATE_RESPONSE = 65539,
  ID_C2S_ROLE_PROPERTY_REQUEST = 65540,
  ID_S2C_ROLE_PROPERTY_RESPONSE = 65541,
  ROLE_MODULE_END = 65542
};
bool RoleOpcode_IsValid(int value);
const RoleOpcode RoleOpcode_MIN = ID_C2S_ROLE_LOGIN_REQUEST;
const RoleOpcode RoleOpcode_MAX = ROLE_MODULE_END;
const int RoleOpcode_ARRAYSIZE = RoleOpcode_MAX + 1;

const ::google::protobuf::EnumDescriptor* RoleOpcode_descriptor();
inline const ::std::string& RoleOpcode_Name(RoleOpcode value) {
  return ::google::protobuf::internal::NameOfEnum(
    RoleOpcode_descriptor(), value);
}
inline bool RoleOpcode_Parse(
    const ::std::string& name, RoleOpcode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RoleOpcode>(
    RoleOpcode_descriptor(), name, value);
}
// ===================================================================

class CMessageRoleLoginRequest : public ::google::protobuf::Message {
 public:
  CMessageRoleLoginRequest();
  virtual ~CMessageRoleLoginRequest();

  CMessageRoleLoginRequest(const CMessageRoleLoginRequest& from);

  inline CMessageRoleLoginRequest& operator=(const CMessageRoleLoginRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRoleLoginRequest& default_instance();

  void Swap(CMessageRoleLoginRequest* other);

  // implements Message ----------------------------------------------

  CMessageRoleLoginRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRoleLoginRequest& from);
  void MergeFrom(const CMessageRoleLoginRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string token = 1;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 1;
  inline const ::std::string& token() const;
  inline void set_token(const ::std::string& value);
  inline void set_token(const char* value);
  inline void set_token(const char* value, size_t size);
  inline ::std::string* mutable_token();
  inline ::std::string* release_token();
  inline void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:CMessageRoleLoginRequest)
 private:
  inline void set_has_token();
  inline void clear_has_token();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* token_;
  friend void  protobuf_AddDesc_rolemessage_2eproto();
  friend void protobuf_AssignDesc_rolemessage_2eproto();
  friend void protobuf_ShutdownFile_rolemessage_2eproto();

  void InitAsDefaultInstance();
  static CMessageRoleLoginRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRoleLoginResponse : public ::google::protobuf::Message {
 public:
  CMessageRoleLoginResponse();
  virtual ~CMessageRoleLoginResponse();

  CMessageRoleLoginResponse(const CMessageRoleLoginResponse& from);

  inline CMessageRoleLoginResponse& operator=(const CMessageRoleLoginResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRoleLoginResponse& default_instance();

  void Swap(CMessageRoleLoginResponse* other);

  // implements Message ----------------------------------------------

  CMessageRoleLoginResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRoleLoginResponse& from);
  void MergeFrom(const CMessageRoleLoginResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);

  // optional string nickname = 2;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // optional int32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 exp = 4;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 4;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // optional int32 physical = 5;
  inline bool has_physical() const;
  inline void clear_physical();
  static const int kPhysicalFieldNumber = 5;
  inline ::google::protobuf::int32 physical() const;
  inline void set_physical(::google::protobuf::int32 value);

  // optional int32 glod = 6;
  inline bool has_glod() const;
  inline void clear_glod();
  static const int kGlodFieldNumber = 6;
  inline ::google::protobuf::int32 glod() const;
  inline void set_glod(::google::protobuf::int32 value);

  // optional int32 diamond = 7;
  inline bool has_diamond() const;
  inline void clear_diamond();
  static const int kDiamondFieldNumber = 7;
  inline ::google::protobuf::int32 diamond() const;
  inline void set_diamond(::google::protobuf::int32 value);

  // optional int32 result = 8;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 8;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 bits = 9;
  inline bool has_bits() const;
  inline void clear_bits();
  static const int kBitsFieldNumber = 9;
  inline ::google::protobuf::int32 bits() const;
  inline void set_bits(::google::protobuf::int32 value);

  // optional int32 mission1 = 10;
  inline bool has_mission1() const;
  inline void clear_mission1();
  static const int kMission1FieldNumber = 10;
  inline ::google::protobuf::int32 mission1() const;
  inline void set_mission1(::google::protobuf::int32 value);

  // optional int32 timeleft = 11;
  inline bool has_timeleft() const;
  inline void clear_timeleft();
  static const int kTimeleftFieldNumber = 11;
  inline ::google::protobuf::int32 timeleft() const;
  inline void set_timeleft(::google::protobuf::int32 value);

  // optional int32 interval = 12;
  inline bool has_interval() const;
  inline void clear_interval();
  static const int kIntervalFieldNumber = 12;
  inline ::google::protobuf::int32 interval() const;
  inline void set_interval(::google::protobuf::int32 value);

  // optional int32 addition = 13;
  inline bool has_addition() const;
  inline void clear_addition();
  static const int kAdditionFieldNumber = 13;
  inline ::google::protobuf::int32 addition() const;
  inline void set_addition(::google::protobuf::int32 value);

  // optional int32 mission2 = 14;
  inline bool has_mission2() const;
  inline void clear_mission2();
  static const int kMission2FieldNumber = 14;
  inline ::google::protobuf::int32 mission2() const;
  inline void set_mission2(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMessageRoleLoginResponse)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_physical();
  inline void clear_has_physical();
  inline void set_has_glod();
  inline void clear_has_glod();
  inline void set_has_diamond();
  inline void clear_has_diamond();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_bits();
  inline void clear_has_bits();
  inline void set_has_mission1();
  inline void clear_has_mission1();
  inline void set_has_timeleft();
  inline void clear_has_timeleft();
  inline void set_has_interval();
  inline void clear_has_interval();
  inline void set_has_addition();
  inline void clear_has_addition();
  inline void set_has_mission2();
  inline void clear_has_mission2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* nickname_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 physical_;
  ::google::protobuf::int32 glod_;
  ::google::protobuf::int32 diamond_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 bits_;
  ::google::protobuf::int32 mission1_;
  ::google::protobuf::int32 timeleft_;
  ::google::protobuf::int32 interval_;
  ::google::protobuf::int32 addition_;
  ::google::protobuf::int32 mission2_;
  friend void  protobuf_AddDesc_rolemessage_2eproto();
  friend void protobuf_AssignDesc_rolemessage_2eproto();
  friend void protobuf_ShutdownFile_rolemessage_2eproto();

  void InitAsDefaultInstance();
  static CMessageRoleLoginResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRoleCreateRequest : public ::google::protobuf::Message {
 public:
  CMessageRoleCreateRequest();
  virtual ~CMessageRoleCreateRequest();

  CMessageRoleCreateRequest(const CMessageRoleCreateRequest& from);

  inline CMessageRoleCreateRequest& operator=(const CMessageRoleCreateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRoleCreateRequest& default_instance();

  void Swap(CMessageRoleCreateRequest* other);

  // implements Message ----------------------------------------------

  CMessageRoleCreateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRoleCreateRequest& from);
  void MergeFrom(const CMessageRoleCreateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 style = 1;
  inline bool has_style() const;
  inline void clear_style();
  static const int kStyleFieldNumber = 1;
  inline ::google::protobuf::int32 style() const;
  inline void set_style(::google::protobuf::int32 value);

  // optional int32 userid = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 2;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);

  // optional string nickname = 3;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // @@protoc_insertion_point(class_scope:CMessageRoleCreateRequest)
 private:
  inline void set_has_style();
  inline void clear_has_style();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_nickname();
  inline void clear_has_nickname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 style_;
  ::google::protobuf::int32 userid_;
  ::std::string* nickname_;
  friend void  protobuf_AddDesc_rolemessage_2eproto();
  friend void protobuf_AssignDesc_rolemessage_2eproto();
  friend void protobuf_ShutdownFile_rolemessage_2eproto();

  void InitAsDefaultInstance();
  static CMessageRoleCreateRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRoleCreateResponse : public ::google::protobuf::Message {
 public:
  CMessageRoleCreateResponse();
  virtual ~CMessageRoleCreateResponse();

  CMessageRoleCreateResponse(const CMessageRoleCreateResponse& from);

  inline CMessageRoleCreateResponse& operator=(const CMessageRoleCreateResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRoleCreateResponse& default_instance();

  void Swap(CMessageRoleCreateResponse* other);

  // implements Message ----------------------------------------------

  CMessageRoleCreateResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRoleCreateResponse& from);
  void MergeFrom(const CMessageRoleCreateResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMessageRoleCreateResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_rolemessage_2eproto();
  friend void protobuf_AssignDesc_rolemessage_2eproto();
  friend void protobuf_ShutdownFile_rolemessage_2eproto();

  void InitAsDefaultInstance();
  static CMessageRoleCreateResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRolePropertyRequest : public ::google::protobuf::Message {
 public:
  CMessageRolePropertyRequest();
  virtual ~CMessageRolePropertyRequest();

  CMessageRolePropertyRequest(const CMessageRolePropertyRequest& from);

  inline CMessageRolePropertyRequest& operator=(const CMessageRolePropertyRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRolePropertyRequest& default_instance();

  void Swap(CMessageRolePropertyRequest* other);

  // implements Message ----------------------------------------------

  CMessageRolePropertyRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRolePropertyRequest& from);
  void MergeFrom(const CMessageRolePropertyRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 style = 1;
  inline bool has_style() const;
  inline void clear_style();
  static const int kStyleFieldNumber = 1;
  inline ::google::protobuf::int32 style() const;
  inline void set_style(::google::protobuf::int32 value);

  // optional int32 userid = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 2;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMessageRolePropertyRequest)
 private:
  inline void set_has_style();
  inline void clear_has_style();
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 style_;
  ::google::protobuf::int32 userid_;
  friend void  protobuf_AddDesc_rolemessage_2eproto();
  friend void protobuf_AssignDesc_rolemessage_2eproto();
  friend void protobuf_ShutdownFile_rolemessage_2eproto();

  void InitAsDefaultInstance();
  static CMessageRolePropertyRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRolePropertyResponse : public ::google::protobuf::Message {
 public:
  CMessageRolePropertyResponse();
  virtual ~CMessageRolePropertyResponse();

  CMessageRolePropertyResponse(const CMessageRolePropertyResponse& from);

  inline CMessageRolePropertyResponse& operator=(const CMessageRolePropertyResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRolePropertyResponse& default_instance();

  void Swap(CMessageRolePropertyResponse* other);

  // implements Message ----------------------------------------------

  CMessageRolePropertyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRolePropertyResponse& from);
  void MergeFrom(const CMessageRolePropertyResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 fight = 1;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 1;
  inline ::google::protobuf::int32 fight() const;
  inline void set_fight(::google::protobuf::int32 value);

  // optional int32 attack = 2;
  inline bool has_attack() const;
  inline void clear_attack();
  static const int kAttackFieldNumber = 2;
  inline ::google::protobuf::int32 attack() const;
  inline void set_attack(::google::protobuf::int32 value);

  // optional int32 defence = 3;
  inline bool has_defence() const;
  inline void clear_defence();
  static const int kDefenceFieldNumber = 3;
  inline ::google::protobuf::int32 defence() const;
  inline void set_defence(::google::protobuf::int32 value);

  // optional int32 hp = 4;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 4;
  inline ::google::protobuf::int32 hp() const;
  inline void set_hp(::google::protobuf::int32 value);

  // optional int32 speed = 5;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 5;
  inline ::google::protobuf::int32 speed() const;
  inline void set_speed(::google::protobuf::int32 value);

  // optional int32 crit = 6;
  inline bool has_crit() const;
  inline void clear_crit();
  static const int kCritFieldNumber = 6;
  inline ::google::protobuf::int32 crit() const;
  inline void set_crit(::google::protobuf::int32 value);

  // optional int32 immunity = 7;
  inline bool has_immunity() const;
  inline void clear_immunity();
  static const int kImmunityFieldNumber = 7;
  inline ::google::protobuf::int32 immunity() const;
  inline void set_immunity(::google::protobuf::int32 value);

  // optional int32 magic = 8;
  inline bool has_magic() const;
  inline void clear_magic();
  static const int kMagicFieldNumber = 8;
  inline ::google::protobuf::int32 magic() const;
  inline void set_magic(::google::protobuf::int32 value);

  // optional int32 strong = 9;
  inline bool has_strong() const;
  inline void clear_strong();
  static const int kStrongFieldNumber = 9;
  inline ::google::protobuf::int32 strong() const;
  inline void set_strong(::google::protobuf::int32 value);

  // optional int32 agile = 10;
  inline bool has_agile() const;
  inline void clear_agile();
  static const int kAgileFieldNumber = 10;
  inline ::google::protobuf::int32 agile() const;
  inline void set_agile(::google::protobuf::int32 value);

  // optional int32 endurance = 11;
  inline bool has_endurance() const;
  inline void clear_endurance();
  static const int kEnduranceFieldNumber = 11;
  inline ::google::protobuf::int32 endurance() const;
  inline void set_endurance(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMessageRolePropertyResponse)
 private:
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_attack();
  inline void clear_has_attack();
  inline void set_has_defence();
  inline void clear_has_defence();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_speed();
  inline void clear_has_speed();
  inline void set_has_crit();
  inline void clear_has_crit();
  inline void set_has_immunity();
  inline void clear_has_immunity();
  inline void set_has_magic();
  inline void clear_has_magic();
  inline void set_has_strong();
  inline void clear_has_strong();
  inline void set_has_agile();
  inline void clear_has_agile();
  inline void set_has_endurance();
  inline void clear_has_endurance();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 fight_;
  ::google::protobuf::int32 attack_;
  ::google::protobuf::int32 defence_;
  ::google::protobuf::int32 hp_;
  ::google::protobuf::int32 speed_;
  ::google::protobuf::int32 crit_;
  ::google::protobuf::int32 immunity_;
  ::google::protobuf::int32 magic_;
  ::google::protobuf::int32 strong_;
  ::google::protobuf::int32 agile_;
  ::google::protobuf::int32 endurance_;
  friend void  protobuf_AddDesc_rolemessage_2eproto();
  friend void protobuf_AssignDesc_rolemessage_2eproto();
  friend void protobuf_ShutdownFile_rolemessage_2eproto();

  void InitAsDefaultInstance();
  static CMessageRolePropertyResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// CMessageRoleLoginRequest

// optional string token = 1;
inline bool CMessageRoleLoginRequest::has_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMessageRoleLoginRequest::set_has_token() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMessageRoleLoginRequest::clear_has_token() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMessageRoleLoginRequest::clear_token() {
  if (token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_->clear();
  }
  clear_has_token();
}
inline const ::std::string& CMessageRoleLoginRequest::token() const {
  // @@protoc_insertion_point(field_get:CMessageRoleLoginRequest.token)
  return *token_;
}
inline void CMessageRoleLoginRequest::set_token(const ::std::string& value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_ = new ::std::string;
  }
  token_->assign(value);
  // @@protoc_insertion_point(field_set:CMessageRoleLoginRequest.token)
}
inline void CMessageRoleLoginRequest::set_token(const char* value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_ = new ::std::string;
  }
  token_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMessageRoleLoginRequest.token)
}
inline void CMessageRoleLoginRequest::set_token(const char* value, size_t size) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_ = new ::std::string;
  }
  token_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMessageRoleLoginRequest.token)
}
inline ::std::string* CMessageRoleLoginRequest::mutable_token() {
  set_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMessageRoleLoginRequest.token)
  return token_;
}
inline ::std::string* CMessageRoleLoginRequest::release_token() {
  clear_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = token_;
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMessageRoleLoginRequest::set_allocated_token(::std::string* token) {
  if (token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete token_;
  }
  if (token) {
    set_has_token();
    token_ = token;
  } else {
    clear_has_token();
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMessageRoleLoginRequest.token)
}

// -------------------------------------------------------------------

// CMessageRoleLoginResponse

// optional int32 userid = 1;
inline bool CMessageRoleLoginResponse::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMessageRoleLoginResponse::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMessageRoleLoginResponse::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMessageRoleLoginResponse::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 CMessageRoleLoginResponse::userid() const {
  // @@protoc_insertion_point(field_get:CMessageRoleLoginResponse.userid)
  return userid_;
}
inline void CMessageRoleLoginResponse::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMessageRoleLoginResponse.userid)
}

// optional string nickname = 2;
inline bool CMessageRoleLoginResponse::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMessageRoleLoginResponse::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMessageRoleLoginResponse::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMessageRoleLoginResponse::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& CMessageRoleLoginResponse::nickname() const {
  // @@protoc_insertion_point(field_get:CMessageRoleLoginResponse.nickname)
  return *nickname_;
}
inline void CMessageRoleLoginResponse::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:CMessageRoleLoginResponse.nickname)
}
inline void CMessageRoleLoginResponse::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMessageRoleLoginResponse.nickname)
}
inline void CMessageRoleLoginResponse::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMessageRoleLoginResponse.nickname)
}
inline ::std::string* CMessageRoleLoginResponse::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMessageRoleLoginResponse.nickname)
  return nickname_;
}
inline ::std::string* CMessageRoleLoginResponse::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMessageRoleLoginResponse::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMessageRoleLoginResponse.nickname)
}

// optional int32 level = 3;
inline bool CMessageRoleLoginResponse::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMessageRoleLoginResponse::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMessageRoleLoginResponse::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMessageRoleLoginResponse::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 CMessageRoleLoginResponse::level() const {
  // @@protoc_insertion_point(field_get:CMessageRoleLoginResponse.level)
  return level_;
}
inline void CMessageRoleLoginResponse::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:CMessageRoleLoginResponse.level)
}

// optional int32 exp = 4;
inline bool CMessageRoleLoginResponse::has_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMessageRoleLoginResponse::set_has_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMessageRoleLoginResponse::clear_has_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMessageRoleLoginResponse::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 CMessageRoleLoginResponse::exp() const {
  // @@protoc_insertion_point(field_get:CMessageRoleLoginResponse.exp)
  return exp_;
}
inline void CMessageRoleLoginResponse::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:CMessageRoleLoginResponse.exp)
}

// optional int32 physical = 5;
inline bool CMessageRoleLoginResponse::has_physical() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMessageRoleLoginResponse::set_has_physical() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMessageRoleLoginResponse::clear_has_physical() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMessageRoleLoginResponse::clear_physical() {
  physical_ = 0;
  clear_has_physical();
}
inline ::google::protobuf::int32 CMessageRoleLoginResponse::physical() const {
  // @@protoc_insertion_point(field_get:CMessageRoleLoginResponse.physical)
  return physical_;
}
inline void CMessageRoleLoginResponse::set_physical(::google::protobuf::int32 value) {
  set_has_physical();
  physical_ = value;
  // @@protoc_insertion_point(field_set:CMessageRoleLoginResponse.physical)
}

// optional int32 glod = 6;
inline bool CMessageRoleLoginResponse::has_glod() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMessageRoleLoginResponse::set_has_glod() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMessageRoleLoginResponse::clear_has_glod() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMessageRoleLoginResponse::clear_glod() {
  glod_ = 0;
  clear_has_glod();
}
inline ::google::protobuf::int32 CMessageRoleLoginResponse::glod() const {
  // @@protoc_insertion_point(field_get:CMessageRoleLoginResponse.glod)
  return glod_;
}
inline void CMessageRoleLoginResponse::set_glod(::google::protobuf::int32 value) {
  set_has_glod();
  glod_ = value;
  // @@protoc_insertion_point(field_set:CMessageRoleLoginResponse.glod)
}

// optional int32 diamond = 7;
inline bool CMessageRoleLoginResponse::has_diamond() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMessageRoleLoginResponse::set_has_diamond() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMessageRoleLoginResponse::clear_has_diamond() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMessageRoleLoginResponse::clear_diamond() {
  diamond_ = 0;
  clear_has_diamond();
}
inline ::google::protobuf::int32 CMessageRoleLoginResponse::diamond() const {
  // @@protoc_insertion_point(field_get:CMessageRoleLoginResponse.diamond)
  return diamond_;
}
inline void CMessageRoleLoginResponse::set_diamond(::google::protobuf::int32 value) {
  set_has_diamond();
  diamond_ = value;
  // @@protoc_insertion_point(field_set:CMessageRoleLoginResponse.diamond)
}

// optional int32 result = 8;
inline bool CMessageRoleLoginResponse::has_result() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMessageRoleLoginResponse::set_has_result() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMessageRoleLoginResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMessageRoleLoginResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 CMessageRoleLoginResponse::result() const {
  // @@protoc_insertion_point(field_get:CMessageRoleLoginResponse.result)
  return result_;
}
inline void CMessageRoleLoginResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMessageRoleLoginResponse.result)
}

// optional int32 bits = 9;
inline bool CMessageRoleLoginResponse::has_bits() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMessageRoleLoginResponse::set_has_bits() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMessageRoleLoginResponse::clear_has_bits() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMessageRoleLoginResponse::clear_bits() {
  bits_ = 0;
  clear_has_bits();
}
inline ::google::protobuf::int32 CMessageRoleLoginResponse::bits() const {
  // @@protoc_insertion_point(field_get:CMessageRoleLoginResponse.bits)
  return bits_;
}
inline void CMessageRoleLoginResponse::set_bits(::google::protobuf::int32 value) {
  set_has_bits();
  bits_ = value;
  // @@protoc_insertion_point(field_set:CMessageRoleLoginResponse.bits)
}

// optional int32 mission1 = 10;
inline bool CMessageRoleLoginResponse::has_mission1() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMessageRoleLoginResponse::set_has_mission1() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMessageRoleLoginResponse::clear_has_mission1() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMessageRoleLoginResponse::clear_mission1() {
  mission1_ = 0;
  clear_has_mission1();
}
inline ::google::protobuf::int32 CMessageRoleLoginResponse::mission1() const {
  // @@protoc_insertion_point(field_get:CMessageRoleLoginResponse.mission1)
  return mission1_;
}
inline void CMessageRoleLoginResponse::set_mission1(::google::protobuf::int32 value) {
  set_has_mission1();
  mission1_ = value;
  // @@protoc_insertion_point(field_set:CMessageRoleLoginResponse.mission1)
}

// optional int32 timeleft = 11;
inline bool CMessageRoleLoginResponse::has_timeleft() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMessageRoleLoginResponse::set_has_timeleft() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMessageRoleLoginResponse::clear_has_timeleft() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMessageRoleLoginResponse::clear_timeleft() {
  timeleft_ = 0;
  clear_has_timeleft();
}
inline ::google::protobuf::int32 CMessageRoleLoginResponse::timeleft() const {
  // @@protoc_insertion_point(field_get:CMessageRoleLoginResponse.timeleft)
  return timeleft_;
}
inline void CMessageRoleLoginResponse::set_timeleft(::google::protobuf::int32 value) {
  set_has_timeleft();
  timeleft_ = value;
  // @@protoc_insertion_point(field_set:CMessageRoleLoginResponse.timeleft)
}

// optional int32 interval = 12;
inline bool CMessageRoleLoginResponse::has_interval() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMessageRoleLoginResponse::set_has_interval() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMessageRoleLoginResponse::clear_has_interval() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMessageRoleLoginResponse::clear_interval() {
  interval_ = 0;
  clear_has_interval();
}
inline ::google::protobuf::int32 CMessageRoleLoginResponse::interval() const {
  // @@protoc_insertion_point(field_get:CMessageRoleLoginResponse.interval)
  return interval_;
}
inline void CMessageRoleLoginResponse::set_interval(::google::protobuf::int32 value) {
  set_has_interval();
  interval_ = value;
  // @@protoc_insertion_point(field_set:CMessageRoleLoginResponse.interval)
}

// optional int32 addition = 13;
inline bool CMessageRoleLoginResponse::has_addition() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMessageRoleLoginResponse::set_has_addition() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMessageRoleLoginResponse::clear_has_addition() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMessageRoleLoginResponse::clear_addition() {
  addition_ = 0;
  clear_has_addition();
}
inline ::google::protobuf::int32 CMessageRoleLoginResponse::addition() const {
  // @@protoc_insertion_point(field_get:CMessageRoleLoginResponse.addition)
  return addition_;
}
inline void CMessageRoleLoginResponse::set_addition(::google::protobuf::int32 value) {
  set_has_addition();
  addition_ = value;
  // @@protoc_insertion_point(field_set:CMessageRoleLoginResponse.addition)
}

// optional int32 mission2 = 14;
inline bool CMessageRoleLoginResponse::has_mission2() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMessageRoleLoginResponse::set_has_mission2() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMessageRoleLoginResponse::clear_has_mission2() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMessageRoleLoginResponse::clear_mission2() {
  mission2_ = 0;
  clear_has_mission2();
}
inline ::google::protobuf::int32 CMessageRoleLoginResponse::mission2() const {
  // @@protoc_insertion_point(field_get:CMessageRoleLoginResponse.mission2)
  return mission2_;
}
inline void CMessageRoleLoginResponse::set_mission2(::google::protobuf::int32 value) {
  set_has_mission2();
  mission2_ = value;
  // @@protoc_insertion_point(field_set:CMessageRoleLoginResponse.mission2)
}

// -------------------------------------------------------------------

// CMessageRoleCreateRequest

// optional int32 style = 1;
inline bool CMessageRoleCreateRequest::has_style() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMessageRoleCreateRequest::set_has_style() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMessageRoleCreateRequest::clear_has_style() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMessageRoleCreateRequest::clear_style() {
  style_ = 0;
  clear_has_style();
}
inline ::google::protobuf::int32 CMessageRoleCreateRequest::style() const {
  // @@protoc_insertion_point(field_get:CMessageRoleCreateRequest.style)
  return style_;
}
inline void CMessageRoleCreateRequest::set_style(::google::protobuf::int32 value) {
  set_has_style();
  style_ = value;
  // @@protoc_insertion_point(field_set:CMessageRoleCreateRequest.style)
}

// optional int32 userid = 2;
inline bool CMessageRoleCreateRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMessageRoleCreateRequest::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMessageRoleCreateRequest::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMessageRoleCreateRequest::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 CMessageRoleCreateRequest::userid() const {
  // @@protoc_insertion_point(field_get:CMessageRoleCreateRequest.userid)
  return userid_;
}
inline void CMessageRoleCreateRequest::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMessageRoleCreateRequest.userid)
}

// optional string nickname = 3;
inline bool CMessageRoleCreateRequest::has_nickname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMessageRoleCreateRequest::set_has_nickname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMessageRoleCreateRequest::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMessageRoleCreateRequest::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& CMessageRoleCreateRequest::nickname() const {
  // @@protoc_insertion_point(field_get:CMessageRoleCreateRequest.nickname)
  return *nickname_;
}
inline void CMessageRoleCreateRequest::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:CMessageRoleCreateRequest.nickname)
}
inline void CMessageRoleCreateRequest::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMessageRoleCreateRequest.nickname)
}
inline void CMessageRoleCreateRequest::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMessageRoleCreateRequest.nickname)
}
inline ::std::string* CMessageRoleCreateRequest::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMessageRoleCreateRequest.nickname)
  return nickname_;
}
inline ::std::string* CMessageRoleCreateRequest::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMessageRoleCreateRequest::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMessageRoleCreateRequest.nickname)
}

// -------------------------------------------------------------------

// CMessageRoleCreateResponse

// optional int32 result = 1;
inline bool CMessageRoleCreateResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMessageRoleCreateResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMessageRoleCreateResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMessageRoleCreateResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 CMessageRoleCreateResponse::result() const {
  // @@protoc_insertion_point(field_get:CMessageRoleCreateResponse.result)
  return result_;
}
inline void CMessageRoleCreateResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMessageRoleCreateResponse.result)
}

// -------------------------------------------------------------------

// CMessageRolePropertyRequest

// optional int32 style = 1;
inline bool CMessageRolePropertyRequest::has_style() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMessageRolePropertyRequest::set_has_style() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMessageRolePropertyRequest::clear_has_style() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMessageRolePropertyRequest::clear_style() {
  style_ = 0;
  clear_has_style();
}
inline ::google::protobuf::int32 CMessageRolePropertyRequest::style() const {
  // @@protoc_insertion_point(field_get:CMessageRolePropertyRequest.style)
  return style_;
}
inline void CMessageRolePropertyRequest::set_style(::google::protobuf::int32 value) {
  set_has_style();
  style_ = value;
  // @@protoc_insertion_point(field_set:CMessageRolePropertyRequest.style)
}

// optional int32 userid = 2;
inline bool CMessageRolePropertyRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMessageRolePropertyRequest::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMessageRolePropertyRequest::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMessageRolePropertyRequest::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 CMessageRolePropertyRequest::userid() const {
  // @@protoc_insertion_point(field_get:CMessageRolePropertyRequest.userid)
  return userid_;
}
inline void CMessageRolePropertyRequest::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMessageRolePropertyRequest.userid)
}

// -------------------------------------------------------------------

// CMessageRolePropertyResponse

// optional int32 fight = 1;
inline bool CMessageRolePropertyResponse::has_fight() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMessageRolePropertyResponse::set_has_fight() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMessageRolePropertyResponse::clear_has_fight() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMessageRolePropertyResponse::clear_fight() {
  fight_ = 0;
  clear_has_fight();
}
inline ::google::protobuf::int32 CMessageRolePropertyResponse::fight() const {
  // @@protoc_insertion_point(field_get:CMessageRolePropertyResponse.fight)
  return fight_;
}
inline void CMessageRolePropertyResponse::set_fight(::google::protobuf::int32 value) {
  set_has_fight();
  fight_ = value;
  // @@protoc_insertion_point(field_set:CMessageRolePropertyResponse.fight)
}

// optional int32 attack = 2;
inline bool CMessageRolePropertyResponse::has_attack() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMessageRolePropertyResponse::set_has_attack() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMessageRolePropertyResponse::clear_has_attack() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMessageRolePropertyResponse::clear_attack() {
  attack_ = 0;
  clear_has_attack();
}
inline ::google::protobuf::int32 CMessageRolePropertyResponse::attack() const {
  // @@protoc_insertion_point(field_get:CMessageRolePropertyResponse.attack)
  return attack_;
}
inline void CMessageRolePropertyResponse::set_attack(::google::protobuf::int32 value) {
  set_has_attack();
  attack_ = value;
  // @@protoc_insertion_point(field_set:CMessageRolePropertyResponse.attack)
}

// optional int32 defence = 3;
inline bool CMessageRolePropertyResponse::has_defence() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMessageRolePropertyResponse::set_has_defence() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMessageRolePropertyResponse::clear_has_defence() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMessageRolePropertyResponse::clear_defence() {
  defence_ = 0;
  clear_has_defence();
}
inline ::google::protobuf::int32 CMessageRolePropertyResponse::defence() const {
  // @@protoc_insertion_point(field_get:CMessageRolePropertyResponse.defence)
  return defence_;
}
inline void CMessageRolePropertyResponse::set_defence(::google::protobuf::int32 value) {
  set_has_defence();
  defence_ = value;
  // @@protoc_insertion_point(field_set:CMessageRolePropertyResponse.defence)
}

// optional int32 hp = 4;
inline bool CMessageRolePropertyResponse::has_hp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMessageRolePropertyResponse::set_has_hp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMessageRolePropertyResponse::clear_has_hp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMessageRolePropertyResponse::clear_hp() {
  hp_ = 0;
  clear_has_hp();
}
inline ::google::protobuf::int32 CMessageRolePropertyResponse::hp() const {
  // @@protoc_insertion_point(field_get:CMessageRolePropertyResponse.hp)
  return hp_;
}
inline void CMessageRolePropertyResponse::set_hp(::google::protobuf::int32 value) {
  set_has_hp();
  hp_ = value;
  // @@protoc_insertion_point(field_set:CMessageRolePropertyResponse.hp)
}

// optional int32 speed = 5;
inline bool CMessageRolePropertyResponse::has_speed() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMessageRolePropertyResponse::set_has_speed() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMessageRolePropertyResponse::clear_has_speed() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMessageRolePropertyResponse::clear_speed() {
  speed_ = 0;
  clear_has_speed();
}
inline ::google::protobuf::int32 CMessageRolePropertyResponse::speed() const {
  // @@protoc_insertion_point(field_get:CMessageRolePropertyResponse.speed)
  return speed_;
}
inline void CMessageRolePropertyResponse::set_speed(::google::protobuf::int32 value) {
  set_has_speed();
  speed_ = value;
  // @@protoc_insertion_point(field_set:CMessageRolePropertyResponse.speed)
}

// optional int32 crit = 6;
inline bool CMessageRolePropertyResponse::has_crit() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMessageRolePropertyResponse::set_has_crit() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMessageRolePropertyResponse::clear_has_crit() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMessageRolePropertyResponse::clear_crit() {
  crit_ = 0;
  clear_has_crit();
}
inline ::google::protobuf::int32 CMessageRolePropertyResponse::crit() const {
  // @@protoc_insertion_point(field_get:CMessageRolePropertyResponse.crit)
  return crit_;
}
inline void CMessageRolePropertyResponse::set_crit(::google::protobuf::int32 value) {
  set_has_crit();
  crit_ = value;
  // @@protoc_insertion_point(field_set:CMessageRolePropertyResponse.crit)
}

// optional int32 immunity = 7;
inline bool CMessageRolePropertyResponse::has_immunity() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMessageRolePropertyResponse::set_has_immunity() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMessageRolePropertyResponse::clear_has_immunity() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMessageRolePropertyResponse::clear_immunity() {
  immunity_ = 0;
  clear_has_immunity();
}
inline ::google::protobuf::int32 CMessageRolePropertyResponse::immunity() const {
  // @@protoc_insertion_point(field_get:CMessageRolePropertyResponse.immunity)
  return immunity_;
}
inline void CMessageRolePropertyResponse::set_immunity(::google::protobuf::int32 value) {
  set_has_immunity();
  immunity_ = value;
  // @@protoc_insertion_point(field_set:CMessageRolePropertyResponse.immunity)
}

// optional int32 magic = 8;
inline bool CMessageRolePropertyResponse::has_magic() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMessageRolePropertyResponse::set_has_magic() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMessageRolePropertyResponse::clear_has_magic() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMessageRolePropertyResponse::clear_magic() {
  magic_ = 0;
  clear_has_magic();
}
inline ::google::protobuf::int32 CMessageRolePropertyResponse::magic() const {
  // @@protoc_insertion_point(field_get:CMessageRolePropertyResponse.magic)
  return magic_;
}
inline void CMessageRolePropertyResponse::set_magic(::google::protobuf::int32 value) {
  set_has_magic();
  magic_ = value;
  // @@protoc_insertion_point(field_set:CMessageRolePropertyResponse.magic)
}

// optional int32 strong = 9;
inline bool CMessageRolePropertyResponse::has_strong() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMessageRolePropertyResponse::set_has_strong() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMessageRolePropertyResponse::clear_has_strong() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMessageRolePropertyResponse::clear_strong() {
  strong_ = 0;
  clear_has_strong();
}
inline ::google::protobuf::int32 CMessageRolePropertyResponse::strong() const {
  // @@protoc_insertion_point(field_get:CMessageRolePropertyResponse.strong)
  return strong_;
}
inline void CMessageRolePropertyResponse::set_strong(::google::protobuf::int32 value) {
  set_has_strong();
  strong_ = value;
  // @@protoc_insertion_point(field_set:CMessageRolePropertyResponse.strong)
}

// optional int32 agile = 10;
inline bool CMessageRolePropertyResponse::has_agile() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMessageRolePropertyResponse::set_has_agile() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMessageRolePropertyResponse::clear_has_agile() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMessageRolePropertyResponse::clear_agile() {
  agile_ = 0;
  clear_has_agile();
}
inline ::google::protobuf::int32 CMessageRolePropertyResponse::agile() const {
  // @@protoc_insertion_point(field_get:CMessageRolePropertyResponse.agile)
  return agile_;
}
inline void CMessageRolePropertyResponse::set_agile(::google::protobuf::int32 value) {
  set_has_agile();
  agile_ = value;
  // @@protoc_insertion_point(field_set:CMessageRolePropertyResponse.agile)
}

// optional int32 endurance = 11;
inline bool CMessageRolePropertyResponse::has_endurance() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMessageRolePropertyResponse::set_has_endurance() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMessageRolePropertyResponse::clear_has_endurance() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMessageRolePropertyResponse::clear_endurance() {
  endurance_ = 0;
  clear_has_endurance();
}
inline ::google::protobuf::int32 CMessageRolePropertyResponse::endurance() const {
  // @@protoc_insertion_point(field_get:CMessageRolePropertyResponse.endurance)
  return endurance_;
}
inline void CMessageRolePropertyResponse::set_endurance(::google::protobuf::int32 value) {
  set_has_endurance();
  endurance_ = value;
  // @@protoc_insertion_point(field_set:CMessageRolePropertyResponse.endurance)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::RoleOpcode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::RoleOpcode>() {
  return ::RoleOpcode_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rolemessage_2eproto__INCLUDED
